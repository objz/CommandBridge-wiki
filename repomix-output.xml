This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
src/
  _data/
    site.json
  _includes/
    icons/
      astro.svg
      docusaurus.svg
      eleventy.svg
      gatsby.svg
      gridsome.svg
      hugo.svg
      jekyll.svg
      nextdotjs.svg
      nuxtdotjs.svg
      pelican.svg
      svelte.svg
      vite.svg
      vuedotjs.svg
    layouts/
      base.njk
      content.njk
      docs.njk
    partials/
      docs/
        footer.njk
        navigation.njk
      analytics.njk
      footer.njk
      header.njk
  assets/
    site.webmanifest
  docs/
    configuration/
      boolean-field.md
      code-field.md
      date-field.md
      file-field.md
      image-field.md
      number-field.md
      object-field.md
      reference-field.md
      rich-text-field.md
      string-field.md
      text-field.md
      uuid-field.md
    configuration.md
    custom-fields.md
    docs.json
    examples.md
    index.md
  styles/
    carousel.css
    main.css
    prose.css
  404.njk
  index.njk
.eleventy.js
.gitignore
LICENSE
package.json
README.md
tailwind.config.js
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/_data/site.json">
{
  "title": "Pages CMS",
  "description": "The No-Hassle CMS for Static Sites",
  "url": "https://pagescms.org",
  "cover": "/assets/cover.png"
}
</file>

<file path="src/_includes/icons/astro.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Astro</title><path d="M8.358 20.162c-1.186-1.07-1.532-3.316-1.038-4.944.856 1.026 2.043 1.352 3.272 1.535 1.897.283 3.76.177 5.522-.678.202-.098.388-.229.608-.36.166.473.209.95.151 1.437-.14 1.185-.738 2.1-1.688 2.794-.38.277-.782.525-1.175.787-1.205.804-1.531 1.747-1.078 3.119l.044.148a3.158 3.158 0 0 1-1.407-1.188 3.31 3.31 0 0 1-.544-1.815c-.004-.32-.004-.642-.048-.958-.106-.769-.472-1.113-1.161-1.133-.707-.02-1.267.411-1.415 1.09-.012.053-.028.104-.045.165h.002zm-5.961-4.445s3.24-1.575 6.49-1.575l2.451-7.565c.092-.366.36-.614.662-.614.302 0 .57.248.662.614l2.45 7.565c3.85 0 6.491 1.575 6.491 1.575L16.088.727C15.93.285 15.663 0 15.303 0H8.697c-.36 0-.615.285-.784.727l-5.516 14.99z"/></svg>
</file>

<file path="src/_includes/icons/docusaurus.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Docusaurus</title><path d="M2.462 22.201h12.321a2.466 2.466 0 0 0 2.369-1.854c.026.004.052.008.079.008a.621.621 0 0 0 .615-.615.621.621 0 0 0-.615-.615c-.027 0-.053.004-.079.007l-.014-.055a.62.62 0 0 0 .378-.568.621.621 0 0 0-.615-.615.608.608 0 0 0-.371.127l-.042-.041a.606.606 0 0 0 .125-.368c0-.67-.919-.858-1.181-.241l-.055-.014c.003-.026.008-.052.008-.079a.622.622 0 0 0-.616-.615.621.621 0 0 0-.615.615h-.096a.617.617 0 0 0-1.033 0h-.717v-2.461h2.461c.115 0 .226-.017.331-.047a.307.307 0 1 0 .529-.304l.02-.021c.052.04.116.064.186.064h.002c.337 0 .428-.463.117-.591l.007-.028c.013.001.026.004.039.004a.31.31 0 0 0 .308-.308.31.31 0 0 0-.308-.308c-.013 0-.026.003-.039.004a.28.28 0 0 1-.007-.027c.327-.13-.028-.745-.305-.528l-.02-.021a.307.307 0 0 0 .062-.184c-.011-.326-.454-.416-.591-.12a1.238 1.238 0 0 0-.32-.047h-2.143a2.465 2.465 0 0 1 2.132-1.23h7.385V9.894l-8.618-.539a1.315 1.315 0 0 1-1.229-1.308c0-.688.542-1.265 1.229-1.307l8.618-.539v-1.23a2.473 2.473 0 0 0-2.462-2.462H8.615l-.307-.533a.356.356 0 0 0-.616 0l-.307.533-.308-.533a.355.355 0 0 0-.615 0l-.308.533-.308-.533a.355.355 0 0 0-.615 0l-.308.533-.008.001-.51-.51a.354.354 0 0 0-.594.159l-.168.628-.639-.171a.357.357 0 0 0-.436.435l.172.639-.628.169a.356.356 0 0 0-.16.594l.51.51v.008l-.533.307a.356.356 0 0 0 0 .616l.533.307-.533.308a.356.356 0 0 0 0 .616l.533.307-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.307a.356.356 0 0 0 0 .616l.533.308-.533.307a.356.356 0 0 0 0 .616l.533.307-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.307a.356.356 0 0 0 0 .616l.533.307-.533.308a.355.355 0 0 0 0 .615l.533.308-.533.308a.355.355 0 0 0 0 .615l.533.308a2.463 2.463 0 0 1-2.13-1.231A2.465 2.465 0 0 0 0 19.74c0 1.35 1.112 2.46 2.462 2.461zm19.692-5.204v2.743a2.473 2.473 0 0 1-2.461 2.461h-.001 1.231a2.466 2.466 0 0 0 2.383-1.854c.026.004.052.008.079.008A.621.621 0 0 0 24 19.74a.621.621 0 0 0-.615-.615c-.027 0-.053.004-.079.007l-.014-.055a.62.62 0 0 0 .378-.568.621.621 0 0 0-.615-.615.608.608 0 0 0-.371.127l-.042-.041a.612.612 0 0 0 .125-.368.623.623 0 0 0-.613-.615zm-4.067 2.62h2.223c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123h-2.223a.845.845 0 0 0 0-.246zm-.33-1.231h2.553c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123h-2.553a.845.845 0 0 0 0-.246zm-1.026-1.231h3.579c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123h-3.474a.85.85 0 0 0-.105-.246zm3.579-.984h-6.159a.126.126 0 0 1-.123-.123c0-.068.056-.123.123-.123h6.159c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123zm1.844-3.816v2.462c.115 0 .225-.017.331-.047a.308.308 0 1 0 .528-.304l.021-.021c.052.04.116.064.186.064a.312.312 0 0 0 .307-.308.306.306 0 0 0-.189-.283l.007-.028c.013.001.026.004.04.004a.312.312 0 0 0 .307-.308.312.312 0 0 0-.307-.308c-.014 0-.027.003-.04.004l-.007-.027a.31.31 0 0 0-.118-.592.306.306 0 0 0-.186.064l-.021-.021a.3.3 0 0 0 .063-.184c-.011-.326-.454-.416-.591-.12a1.24 1.24 0 0 0-.321-.047zm-6.059 2.339h4.215c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123h-4.451a.564.564 0 0 0 .073-.19.553.553 0 0 0 .163-.056zm.454-1.208h3.761c.067 0 .123.056.123.123a.124.124 0 0 1-.123.123h-3.772a.552.552 0 0 0 .011-.246zm5.605-6.225h-.004c-.381.013-.561.393-.719.729-.166.35-.294.578-.504.572-.233-.009-.366-.271-.506-.549-.162-.32-.347-.682-.734-.668-.375.013-.556.344-.715.636-.169.311-.285.5-.507.491-.237-.008-.363-.222-.509-.469-.163-.275-.351-.585-.731-.574-.368.013-.549.294-.709.542-.169.262-.287.421-.513.412-.243-.009-.368-.186-.513-.391-.163-.231-.347-.491-.726-.479-.36.013-.541.243-.701.446-.151.192-.27.344-.52.335h-.005a.126.126 0 0 0-.123.123c0 .066.053.121.119.123.371.012.559-.222.723-.429.145-.184.27-.343.516-.352.237-.01.348.138.516.375.16.226.341.482.705.495.382.013.566-.273.729-.525.145-.226.271-.421.511-.429.22-.008.34.166.51.453.159.271.34.577.712.59.385.014.57-.322.732-.619.14-.257.273-.5.507-.508.221-.005.336.196.506.533.159.314.339.67.717.684h.021c.377 0 .556-.378.714-.713.14-.297.273-.576.501-.588zM7.385 6.509a.312.312 0 0 1-.308-.308c-.01-.532-.378-.911-.927-.922-.528-.011-.888.432-.919.922-.011.168-.139.307-.308.308a.31.31 0 0 1-.308-.308c0-.848.69-1.538 1.539-1.538.848 0 1.538.69 1.538 1.538a.312.312 0 0 1-.307.308zm9.846-2.308a.31.31 0 0 1 .308.308.31.31 0 0 1-.308.308.31.31 0 0 1-.308-.308.31.31 0 0 1 .308-.308zm2.461-.153a.31.31 0 0 1 .307.308.31.31 0 0 1-.308.308h-.001a.31.31 0 0 1-.307-.308.31.31 0 0 1 .308-.308z"/></svg>
</file>

<file path="src/_includes/icons/eleventy.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Eleventy</title><path d="M3.398 12V0h17.204v24H3.398zm13.17 6.07a1.07 1.07 0 00.373-.107c.432-.213.68-.672.877-1.626.076-.372 1.195-6.168 1.209-6.263.026-.186-.008-.382-.084-.476a.325.325 0 00-.087-.064l-.06-.031h-.291c-.253 0-.298 0-.348.02-.113.039-.207.156-.255.316-.011.038-.168.881-.348 1.873l-.328 1.802-.046-.21c-.56-2.547-.764-3.452-.794-3.532a.383.383 0 00-.103-.16c-.105-.107-.117-.11-.567-.11-.411 0-.422 0-.5.074-.086.079-.122.216-.111.42.006.115.045.27.688 2.784.663 2.587.751 2.943.787 3.177.046.3-.05.713-.208.893-.032.037-.037.039-.084.032-.028 0-.12-.027-.204-.051-.268-.078-.362-.072-.462.028-.096.096-.137.248-.138.51 0 .256.028.34.159.473.131.133.324.208.595.23.164.012.22.012.33-.001zm-1.896-1.712a.31.31 0 00.16-.192c.02-.058.022-.098.022-.356 0-.255-.003-.299-.021-.354-.04-.121-.136-.196-.278-.217-.041-.01-.2-.01-.355-.01-.365-.001-.378-.01-.446-.184-.068-.18-.096-.326-.113-.602a85.799 85.799 0 01-.012-1.94v-1.765h.35c.454 0 .507-.01.602-.113a.465.465 0 00.102-.24 3.273 3.273 0 000-.534c-.026-.16-.099-.271-.211-.322-.057-.025-.065-.026-.45-.03h-.392l-.003-1.22c-.003-1.09-.005-1.227-.021-1.278a.378.378 0 00-.201-.247c-.052-.024-.072-.025-.32-.029-.27 0-.356 0-.429.038-.087.042-.148.133-.185.278-.014.054-.032.346-.076 1.262l-.06 1.194s-.08 0-.18.01c-.206.01-.263.022-.327.086-.092.092-.12.19-.127.455-.01.334.02.487.115.588.075.081.134.1.345.106l.173.01v1.785c0 1.7.006 2.019.034 2.274.041.37.13.709.241.928.194.38.544.617.988.668h1.005l.07-.04zm-7.447 0c.098-.053.16-.154.2-.332.016-.077.018-.401.018-4.518 0-4.184-.001-4.44-.02-4.51-.05-.194-.19-.29-.378-.26-.035.01-.344.084-.686.175-.343.09-.684.18-.758.198-.17.043-.214.062-.281.126-.105.098-.122.185-.122.606 0 .416.016.5.12.604.094.095.189.1.456.03.103-.026.193-.048.2-.048.01 0 .014.784.017 3.763.003 3.436.005 3.77.021 3.84.048.202.113.296.236.34.034.013.133.016.487.014.435 0 .445 0 .49-.027zm3.203 0c.092-.046.152-.135.197-.29l.024-.084.003-4.435c.002-3.194 0-4.456-.01-4.509-.033-.2-.145-.308-.322-.308-.066 0-.198.03-.857.204-.56.147-.799.214-.849.239a.34.34 0 00-.17.184c-.024.06-.024.071-.024.479 0 .415 0 .417.026.483a.362.362 0 00.083.12c.1.1.172.105.456.034a5.46 5.46 0 01.208-.05c.008 0 .012 1.202.014 3.791l.003 3.79.026.086a.48.48 0 00.135.23c.078.062.085.063.57.06.414 0 .447 0 .487-.024z"/></svg>
</file>

<file path="src/_includes/icons/gatsby.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Gatsby</title><path d="M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm0 2.571c3.171 0 5.915 1.543 7.629 3.858l-1.286 1.115C16.886 5.572 14.571 4.286 12 4.286c-3.343 0-6.171 2.143-7.286 5.143l9.857 9.857c2.486-.857 4.373-3 4.973-5.572h-4.115V12h6c0 4.457-3.172 8.228-7.372 9.17L2.83 9.944C3.772 5.743 7.543 2.57 12 2.57zm-9.429 9.6l9.344 9.258c-2.4-.086-4.801-.943-6.601-2.743-1.8-1.8-2.743-4.201-2.743-6.515z"/></svg>
</file>

<file path="src/_includes/icons/gridsome.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Gridsome</title><path d="M12.026.017l-.108.001C4.905.135-.102 5.975.002 11.956.025 19.286 6.02 24.13 12.083 23.98c7.208-.2 12.323-6.461 11.892-12.05a2.197 2.197 0 0 0-2.192-2.001h-3.15a2.155 2.155 0 0 0-2.161 2.147c0 1.187.967 2.148 2.16 2.148h.788c-.87 2.791-3.62 5.455-7.44 5.56-3.803.095-7.61-2.904-7.768-7.569a2.173 2.173 0 0 0 0-.159c-.148-3.72 2.895-7.637 7.88-7.845a2.096 2.096 0 0 0 2.003-2.183 2.095 2.095 0 0 0-2.07-2.011zm-.018 9.911a2.15 2.15 0 0 0-2.146 2.151 2.15 2.15 0 0 0 2.146 2.152 2.15 2.15 0 0 0 2.147-2.152 2.15 2.15 0 0 0-2.147-2.15Z"/></svg>
</file>

<file path="src/_includes/icons/hugo.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Hugo</title><path d="M11.754 0a3.998 3.998 0 00-2.049.596L3.33 4.532a4.252 4.252 0 00-2.017 3.615v8.03c0 1.473.79 2.838 2.067 3.574l6.486 3.733a3.88 3.88 0 003.835.018l7.043-3.966a3.817 3.817 0 001.943-3.323V7.752a3.57 3.57 0 00-1.774-3.084L13.817.541a3.998 3.998 0 00-2.063-.54zm.022 1.674c.413-.006.828.1 1.2.315l7.095 4.127c.584.34.941.96.94 1.635v8.462c0 .774-.414 1.484-1.089 1.864l-7.042 3.966a2.199 2.199 0 01-2.179-.01l-6.485-3.734a2.447 2.447 0 01-1.228-2.123v-8.03c0-.893.461-1.72 1.221-2.19l6.376-3.935a2.323 2.323 0 011.19-.347zm-4.7 3.844V18.37h2.69v-5.62h4.46v5.62h2.696V5.518h-2.696v4.681h-4.46V5.518Z"/></svg>
</file>

<file path="src/_includes/icons/jekyll.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Jekyll</title><path d="M8.073 24c-.348 0-.689-.063-1.02-.189-1.375-.525-2.104-2.02-1.726-3.402l-.015-.006.09-.226L12.399 2.01c.105-.27.057-.91.006-1.267-.016-.085-.016-.161.008-.24l.008-.023.006-.015V.458l.009-.019c.108-.292.45-.439 1.008-.439.673 0 1.602.21 2.551.573.797.307 1.523.689 2.033 1.075.602.45.842.854.707 1.2l-.031.045-.016.015c-.045.061-.09.12-.15.165-.314.271-.764.735-.84.945l-7.063 18.421-.016-.006c-.494.948-1.457 1.557-2.543 1.561H8.07l.003.006zm-2.187-3.718l-.02.05c-.447 1.201.162 2.557 1.364 3.018.271.105.551.154.837.154.971 0 1.83-.585 2.188-1.5l.027-.061 6.959-18.09c.146-.39.84-1.02.979-1.14l.016-.016c.012-.015.02-.015.02-.03 0-.06-.061-.27-.557-.645-.479-.36-1.154-.72-1.904-1.005-.868-.328-1.768-.539-2.368-.539-.39 0-.524.082-.545.126v.04c.016.104.147 1.035-.034 1.515l-6.962 18.12v.003zm8.95-11.507s-.964 1.109-1.843 1.509c-.88.398-1.529.293-2.32.756-.789.461-1.188 1.103-1.188 1.103L6.27 20.505c-.348.944.168 2.05 1.125 2.42.96.369 2.04-.12 2.412-1.056l5.029-13.094zM9.905 18.76c.104-.041.225 0 .266.105.042.104 0 .222-.105.264-.104.043-.225 0-.266-.104-.042-.097 0-.216.105-.265zm-1.014-1.802c-.152.068-.334 0-.397-.155-.07-.152 0-.334.154-.397.154-.07.335 0 .398.153.074.15.008.314-.155.39v.009zm.286-1.096c-.123-.288 0-.623.287-.758.285-.124.615 0 .75.285.121.289 0 .624-.285.757-.3.126-.629 0-.765-.285l.013.001zm2.426-2.258c.153-.074.335 0 .398.15.07.154 0 .336-.153.399-.155.07-.337 0-.399-.155-.074-.152 0-.334.154-.397v.003zm-1.293-1.379c.105-.042.226 0 .266.105.043.104 0 .226-.104.266-.104.042-.226 0-.265-.104-.044-.106.006-.227.103-.267zM13.681 1.14c.1-.261.993-.162 1.995.226.999.384 1.729.909 1.63 1.17-.104.264-.997.164-1.996-.221-1.005-.385-1.734-.91-1.632-1.176h.003z"/></svg>
</file>

<file path="src/_includes/icons/nextdotjs.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Next.js</title><path d="M11.5725 0c-.1763 0-.3098.0013-.3584.0067-.0516.0053-.2159.021-.3636.0328-3.4088.3073-6.6017 2.1463-8.624 4.9728C1.1004 6.584.3802 8.3666.1082 10.255c-.0962.659-.108.8537-.108 1.7474s.012 1.0884.108 1.7476c.652 4.506 3.8591 8.2919 8.2087 9.6945.7789.2511 1.6.4223 2.5337.5255.3636.04 1.9354.04 2.299 0 1.6117-.1783 2.9772-.577 4.3237-1.2643.2065-.1056.2464-.1337.2183-.1573-.0188-.0139-.8987-1.1938-1.9543-2.62l-1.919-2.592-2.4047-3.5583c-1.3231-1.9564-2.4117-3.556-2.4211-3.556-.0094-.0026-.0187 1.5787-.0235 3.509-.0067 3.3802-.0093 3.5162-.0516 3.596-.061.115-.108.1618-.2064.2134-.075.0374-.1408.0445-.495.0445h-.406l-.1078-.068a.4383.4383 0 01-.1572-.1712l-.0493-.1056.0053-4.703.0067-4.7054.0726-.0915c.0376-.0493.1174-.1125.1736-.143.0962-.047.1338-.0517.5396-.0517.4787 0 .5584.0187.6827.1547.0353.0377 1.3373 1.9987 2.895 4.3608a10760.433 10760.433 0 004.7344 7.1706l1.9002 2.8782.096-.0633c.8518-.5536 1.7525-1.3418 2.4657-2.1627 1.5179-1.7429 2.4963-3.868 2.8247-6.134.0961-.6591.1078-.854.1078-1.7475 0-.8937-.012-1.0884-.1078-1.7476-.6522-4.506-3.8592-8.2919-8.2087-9.6945-.7672-.2487-1.5836-.42-2.4985-.5232-.169-.0176-1.0835-.0366-1.6123-.037zm4.0685 7.217c.3473 0 .4082.0053.4857.047.1127.0562.204.1642.237.2767.0186.061.0234 1.3653.0186 4.3044l-.0067 4.2175-.7436-1.14-.7461-1.14v-3.066c0-1.982.0093-3.0963.0234-3.1502.0375-.1313.1196-.2346.2323-.2955.0961-.0494.1313-.054.4997-.054z"/></svg>
</file>

<file path="src/_includes/icons/nuxtdotjs.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Nuxt.js</title><path d="M13.4642 19.8295h8.9218c.2834 0 .5618-.0723.8072-.2098a1.5899 1.5899 0 0 0 .5908-.5732 1.5293 1.5293 0 0 0 .216-.783 1.529 1.529 0 0 0-.2167-.7828L17.7916 7.4142a1.5904 1.5904 0 0 0-.5907-.573 1.6524 1.6524 0 0 0-.807-.2099c-.2833 0-.5616.0724-.807.2098a1.5904 1.5904 0 0 0-.5907.5731L13.4642 9.99l-2.9954-5.0366a1.5913 1.5913 0 0 0-.591-.573 1.6533 1.6533 0 0 0-.8071-.2098c-.2834 0-.5617.0723-.8072.2097a1.5913 1.5913 0 0 0-.591.573L.2168 17.4808A1.5292 1.5292 0 0 0 0 18.2635c-.0001.2749.0744.545.216.783a1.59 1.59 0 0 0 .5908.5732c.2454.1375.5238.2098.8072.2098h5.6003c2.219 0 3.8554-.9454 4.9813-2.7899l2.7337-4.5922L16.3935 9.99l4.3944 7.382h-5.8586ZM7.123 17.3694l-3.9083-.0009 5.8586-9.8421 2.9232 4.921-1.9572 3.2892c-.7478 1.1967-1.5972 1.6328-2.9163 1.6328z"/></svg>
</file>

<file path="src/_includes/icons/pelican.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Pelican</title><path d="M.9418 0c.342 1.0548 1.8764 2.1857 2.9063 2.6238 1.3134.5583 2.5984.6849 3.7501.8122.895.0963 1.7019.2014 2.3439.4998.1622.0726.3288.148.4688.2499.4586.3364.9464.9876 1.2813 1.4368.7186.9583.5858 1.7451 1.4375 2.2178.089.0492.1683.083.2813.125.271.1018.667.2273.8437-.1563a.788.788 0 00.0625-.1874c-.0712-.229-.321-.4327-.4687-.531-.2618-.171-.3735-.274-.5625-.4685-.3494-.3583-.348-.9508-.5938-1.3744.3092-.131 1.9392-.3597 2.2813-.3124.7313.0326 1.31.0782 1.75.531.1727.1365.2497.2567.4064.3749.011.009.0202.024.0312.0312.6933.5037 1.3388.6705 1.9063.8434.1496.0454.2988.1054.4375.1562.213.0763.4065.1594.5938.281.2222.1474.6089.542.625.8747-.5587-.1783-.207.0323-1.0313-.0312-.4019-.0456-.8058-.0647-1.2187-.0937-.6422-.0454-1.273-.1043-1.8751-.2187-.1002-.0184-.2146-.0388-.3125-.0625-.0766-.0163-.146-.011-.2188-.0312-.0018.0308 0 .0353 0 .0625-.0166.6292.4214.9586-.5938 2.1553-.009.0127-.0204.0167-.0312.0312-.2695.3147-1.657.9163-2.0938 1.0308-1.8593.3728-3.292-.828-5.5315-.2187-.7877.2928-1.3567 1.5756-1.7188 2.5302-.482 1.2677-.8758 2.7956-1.3126 4.3106-.2.6982-.4178 1.4015-.6562 2.0616-.575 1.584-1.3113 2.9428-2.4064 3.717-.1638.1256-.787.41-.8125.6248.404.2037 4.185.056 4.8127 0 2.5033-.2184 3.6468-1.7733 4.4689-3.9045.5659-1.462 1.065-3.9864 2.0313-5.3102.0128-.0182.0183-.015.0313-.0312.1456-.1967.327-.3691.5-.4998.0454-.0347.0775-.0648.125-.0937.0344-.0219.1566-.0592.3438-.0937 1.7357-.3074 9.3491-1.3474 9.844-6.872.051-.5581.0158-1.1588-.0937-1.8117-.0543-.3364-.115-.6653-.2187-1.0308-.2457-.8691-.7981-1.614-1.5313-2.2177-.1926-.16-.405-.3285-.625-.4686-.846-.54-1.8774-.921-2.969-1.1557-.7332-.1582-1.4874-.239-2.25-.25C9.8402.0326 6.3978.2075.9418 0zm1.625 4.2169c.0235.0382.0389.0574.0625.0937C4.2284 6.8382 6.239 6.8135 8.067 7.0281c.666.0782 1.317.1849 1.9063.4686.262.1235.5116.2649.75.4685-.0292-.131-.076-.2564-.125-.3748-.444-1.0763-1.6487-1.6661-2.6875-1.9679-1.3938-.4984-2.4038-.0181-5.344-1.4056zm1.4063 3.186c.0107.0528.0094.0946.0313.1563.2199.6346 1.0403 1.6503 2.0938 1.8741.4567.1636.315.1174 1.0938.0937 1.1406-.0581 1.692-.0793 2.5.25-.02-.0493-.0423-.1091-.0624-.1563C9.0074 8.175 8.2593 8.421 5.8794 8.2464c-1.0188-.3074-1.2587-.3415-1.9063-.8434z"/></svg>
</file>

<file path="src/_includes/icons/svelte.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Svelte</title><path d="M10.354 21.125a4.44 4.44 0 0 1-4.765-1.767 4.109 4.109 0 0 1-.703-3.107 3.898 3.898 0 0 1 .134-.522l.105-.321.287.21a7.21 7.21 0 0 0 2.186 1.092l.208.063-.02.208a1.253 1.253 0 0 0 .226.83 1.337 1.337 0 0 0 1.435.533 1.231 1.231 0 0 0 .343-.15l5.59-3.562a1.164 1.164 0 0 0 .524-.778 1.242 1.242 0 0 0-.211-.937 1.338 1.338 0 0 0-1.435-.533 1.23 1.23 0 0 0-.343.15l-2.133 1.36a4.078 4.078 0 0 1-1.135.499 4.44 4.44 0 0 1-4.765-1.766 4.108 4.108 0 0 1-.702-3.108 3.855 3.855 0 0 1 1.742-2.582l5.589-3.563a4.072 4.072 0 0 1 1.135-.499 4.44 4.44 0 0 1 4.765 1.767 4.109 4.109 0 0 1 .703 3.107 3.943 3.943 0 0 1-.134.522l-.105.321-.286-.21a7.204 7.204 0 0 0-2.187-1.093l-.208-.063.02-.207a1.255 1.255 0 0 0-.226-.831 1.337 1.337 0 0 0-1.435-.532 1.231 1.231 0 0 0-.343.15L8.62 9.368a1.162 1.162 0 0 0-.524.778 1.24 1.24 0 0 0 .211.937 1.338 1.338 0 0 0 1.435.533 1.235 1.235 0 0 0 .344-.151l2.132-1.36a4.067 4.067 0 0 1 1.135-.498 4.44 4.44 0 0 1 4.765 1.766 4.108 4.108 0 0 1 .702 3.108 3.857 3.857 0 0 1-1.742 2.583l-5.589 3.562a4.072 4.072 0 0 1-1.135.499m10.358-17.95C18.484-.015 14.082-.96 10.9 1.068L5.31 4.63a6.412 6.412 0 0 0-2.896 4.295 6.753 6.753 0 0 0 .666 4.336 6.43 6.43 0 0 0-.96 2.396 6.833 6.833 0 0 0 1.168 5.167c2.229 3.19 6.63 4.135 9.812 2.108l5.59-3.562a6.41 6.41 0 0 0 2.896-4.295 6.756 6.756 0 0 0-.665-4.336 6.429 6.429 0 0 0 .958-2.396 6.831 6.831 0 0 0-1.167-5.168Z"/></svg>
</file>

<file path="src/_includes/icons/vite.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Vite</title><path d="m8.286 10.578.512-8.657a.306.306 0 0 1 .247-.282L17.377.006a.306.306 0 0 1 .353.385l-1.558 5.403a.306.306 0 0 0 .352.385l2.388-.46a.306.306 0 0 1 .332.438l-6.79 13.55-.123.19a.294.294 0 0 1-.252.14c-.177 0-.35-.152-.305-.369l1.095-5.301a.306.306 0 0 0-.388-.355l-1.433.435a.306.306 0 0 1-.389-.354l.69-3.375a.306.306 0 0 0-.37-.36l-2.32.536a.306.306 0 0 1-.374-.316zm14.976-7.926L17.284 3.74l-.544 1.887 2.077-.4a.8.8 0 0 1 .84.369.8.8 0 0 1 .034.783L12.9 19.93l-.013.025-.015.023-.122.19a.801.801 0 0 1-.672.37.826.826 0 0 1-.634-.302.8.8 0 0 1-.16-.67l1.029-4.981-1.12.34a.81.81 0 0 1-.86-.262.802.802 0 0 1-.165-.67l.63-3.08-2.027.468a.808.808 0 0 1-.768-.233.81.81 0 0 1-.217-.6l.389-6.57-7.44-1.33a.612.612 0 0 0-.64.906L11.58 23.691a.612.612 0 0 0 1.066-.004l11.26-20.135a.612.612 0 0 0-.644-.9z"/></svg>
</file>

<file path="src/_includes/icons/vuedotjs.svg">
<svg fill="currentColor" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Vue.js</title><path d="M24,1.61H14.06L12,5.16,9.94,1.61H0L12,22.39ZM12,14.08,5.16,2.23H9.59L12,6.41l2.41-4.18h4.43Z"/></svg>
</file>

<file path="src/_includes/layouts/content.njk">
---
layout: layouts/base.njk
---

<div class="max-w-4xl mx-auto px-4 my-8 lg:px-8 lg:my-12">
  <div class="prose">
    <h1 class="!mb-8">{{ title }}</h1>
    {{ content | safe }}
  </div>
</div>
</file>

<file path="src/_includes/partials/analytics.njk">
<!-- Cloudflare Web Analytics --><script defer src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "7a480a97e93340c1a837ad9c764aa3b9"}'></script><!-- End Cloudflare Web Analytics -->
</file>

<file path="src/assets/site.webmanifest">
{"name":"","short_name":"","icons":[{"src":"/android-chrome-192x192.png","sizes":"192x192","type":"image/png"},{"src":"/android-chrome-512x512.png","sizes":"512x512","type":"image/png"}],"theme_color":"#ffffff","background_color":"#ffffff","display":"standalone"}
</file>

<file path="src/docs/configuration/boolean-field.md">
---
title: Boolean field
---

A simple toggle switch for `true` or `false`.

## Options

*No options.*

## Example

```yaml
- name: published
  label: Published
  type: boolean
  default: true
```
</file>

<file path="src/docs/configuration/code-field.md">
---
title: Code field
---

Code editor with syntax highlighting using [Codemirror](https://codemirror.net/).

## Options

| Option | Type | Description |
| - | - | - |
| **`language`** | `string` | The language for syntax highlight, can be `yaml`, `javascript` `json`, `html` or `markdown`. Default is `markdown`. |

## Example

```yaml
- name: body
  label: Body
  type: code
  options:
    language: html
```
</file>

<file path="src/docs/configuration/text-field.md">
---
title: Text field
---

Multi-line text.

## Options

| Option | Type | Description |
| - | - | - |
| **`minlength`** | `integer` | If set, defines the minimum length in characters.  |
| **`maxlength`** | `integer` | If set, defines the maximum length in characters.  |
| **`autoresize`** | `boolean` | If `true`, will automatically increase the height to fit the content of the field. `true` by default. |
| **`rows`** | `integer` | Visible height of the field in rows. Set to `20` by default. |

## Examples

```yaml
- name: tweet
  label: Tweet
  type: text
  options:
    maxlength: 140
```
</file>

<file path="src/docs/docs.json">
{
  "layout": "layouts/docs.njk",
  "type": "article",
  "tags": [ "docs" ]
}
</file>

<file path="src/docs/examples.md">
---
title: Examples
order: 3
---
A few examples of [configuration files](/docs/configuration).

## Jekyll blog

A simple Jekyll blog with posts in the `_posts` folder and media in `media`. It also expose the Jekyll config file (`_config.yml` ), allowing the user to adjust a few global values (e.g. website title).

```
media: media
content:
  - name: posts
    label: Posts
    type: collection
    path: '_posts'
    view:
      fields: [ title, published, date ]
    fields:
      - name: published
        label: Published
        type: boolean
        default: true
      - name: date
        label: Date
        type: date
      - name: title
        label: Title
        type: string
      - name: body
        label: Body
        type: rich-text
  - name: config
    label: Jekyll config
    path: _config.yml
    type: file
    fields:
      - name: title
        label: Website title
        type: string
      - name: description
        label: Website description
        type: string
        description: Will be provused for any page with no description.
      - name: url
        label: Website URL
        type: string
        pattern: ^(https?:\/\/)?(www\.)?[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}(\/[^\s]*)?$
      - name: cover
        label: Preview image
        type: image
        description: Image used in the social preview on social networks (e.g. Facebook, Twitter...)
```

## 11ty blog

An 11ty blog with all of the code (content, templates, ...) in the `src` subfolder. It sets one collection for blog posts in `src/posts`, and one single file to manage the global site data at `src/_data/site.json` (for things like website title, description, etc).

```
media:
  input: src/media
  output: /media
content:
  - name: posts
    label: Posts
    type: collection
    path: 'src/posts'
    view:
      fields: [ title, published, date ]
    fields:
      - name: published
        label: Published
        type: boolean
        default: true
      - name: date
        label: Date
        type: date
      - name: title
        label: Title
        type: string
      - name: body
        label: Body
        type: rich-text
  - name: site
    label: Site settings
    path: src/_data/site.json
    type: file
    fields:
      - name: title
        label: Website title
        type: string
      - name: description
        label: Website description
        type: string
        description: Will be provused for any page with no description.
      - name: url
        label: Website URL
        type: string
        pattern: ^(https?:\/\/)?(www\.)?[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}(\/[^\s]*)?$
      - name: cover
        label: Preview image
        type: image
        description: Image used in the social preview on social networks (e.g. Facebook, Twitter...)
```
</file>

<file path="src/404.njk">
---
layout: layouts/base.njk
title: This page doesn't exist
description: >-
  I'm told it's called a "404"... damn nerds. This page may not exist but Pages CMS does: it's a user-friendly CMS for static sites. Give it a try!
image: "/media/sorry.gif"
permalink: "404.html"
---

<div class="max-w-xl mx-auto px-4 my-16 lg:px-8 lg:my-24">
  <div class="prose text-center">
    <img src="{{ image }}" width="100%">
    <h1>{{ title }}</h1>
    <p>{{ description }}</p>
  </div>
  <div class="flex max-md:flex-col md:gap-x-4 max-md:gap-y-4 justify-center">
    <a class="btn-primary justify-center" href="/">Take me out of here!</a>
  </div>
</div>
</file>

<file path=".eleventy.js">
const markdownIt = require("markdown-it");
const markdownItAnchor = require("markdown-it-anchor");
const pluginTOC = require("eleventy-plugin-toc")
const lucideIcons = require("@grimlink/eleventy-plugin-lucide-icons");

const md = new markdownIt({ html: true });

module.exports = function(eleventyConfig) {
  eleventyConfig.addPassthroughCopy({
     "src/media": "/media",
     "src/assets": "/",
     "node_modules/alpinejs/dist/cdn.min.js": "js/alpine.js",
     "node_modules/htmx.org/dist/htmx.min.js": "js/htmx.js"
  });

  eleventyConfig.addShortcode("now", () => `${Date.now()}`);

  eleventyConfig.addPlugin(lucideIcons);

  eleventyConfig.setLibrary("md", markdownIt({ html: true }).use(markdownItAnchor, { tabIndex: false }));

  eleventyConfig.addFilter("markdown", (content) => {
    return md.render(content);
  });
  
  eleventyConfig.addPlugin(pluginTOC, {
    tags: ['h2', 'h3'],
  });

  eleventyConfig.addFilter("sortByOrderAndTitle", (values) => {
    let vals = [...values];
    return vals.sort((a, b) => {
      // Sort by order first
      const aOrder = typeof a.data.order === 'number' ? a.data.order : 0;
      const bOrder = typeof b.data.order === 'number' ? b.data.order : 0;
      const orderDiff = aOrder - bOrder;
      if (orderDiff !== 0) return orderDiff;
    
      // If order is the same, sort by title
      return a.data.title.localeCompare(b.data.title);
    })
  });

  eleventyConfig.addFilter("sortByUrl", (values) => {
    let vals = [...values];
    return vals.sort((a, b) => Math.sign(a.url.localeCompare(b.url)));
  });

  eleventyConfig.addNunjucksFilter("getNextPrevMenu", function(menu, currentUrl) {
    let flatMenu = [];
    menu.forEach(item => {
      flatMenu.push(item);
      if (item.children) {
        item.children.forEach(child => {
          flatMenu.push(child);
        });
      }
    });
  
    const currentIndex = flatMenu.findIndex(item => item.url === currentUrl);
    const previousItem = currentIndex > 0 ? flatMenu[currentIndex - 1] : null;
    const nextItem = currentIndex < flatMenu.length - 1 ? flatMenu[currentIndex + 1] : null;
  
    return { previous: previousItem, next: nextItem };
  });
  
  eleventyConfig.addCollection("menu", function(collectionApi) {
    const docs = collectionApi.getFilteredByGlob("src/docs/**/*.md");
    let menu = [];

    docs.sort((a, b) => {
      // Sort by order first
      const aOrder = typeof a.data.order === 'number' ? a.data.order : 0;
      const bOrder = typeof b.data.order === 'number' ? b.data.order : 0;
      const orderDiff = aOrder - bOrder;
      if (orderDiff !== 0) return orderDiff;
    
      // If order is the same, sort by title
      return a.data.title.localeCompare(b.data.title);
    })
    .forEach(doc => {
      const urlSegments = doc.url.split('/').filter(Boolean);
    
      // Add top-level items
      if (urlSegments.length === 1 || urlSegments.length === 2) {
        let menuItem = {
          title: doc.data.title,
          url: doc.url,
          children: []
        };
    
        // Add children
        docs.forEach(subDoc => {
          const subUrlSegments = subDoc.url.split('/').filter(Boolean);
          if (subUrlSegments.length === 3 && subUrlSegments[1] === urlSegments[1]) {
            menuItem.children.push({
              title: subDoc.data.title,
              url: subDoc.url
            });
          }
        });
    
        menu.push(menuItem);
      }
    });

    return menu;
  });
  
  return {
    dir: {
      input: "src",
      output: "_site"
    }
  }
};
</file>

<file path=".gitignore">
node_modules
_site
package-lock.json
.*
!.gitignore
!.eleventy.js
</file>

<file path="LICENSE">
MIT License

Copyright (c) 2023 Pages CMS

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
</file>

<file path="src/_includes/partials/docs/footer.njk">
{% if collections.docs %}
  {% set nextPrevItems = collections.menu | getNextPrevMenu(page.url) %}
  {% set previousDoc = nextPrevItems.previous %}
  {% set nextDoc = nextPrevItems.next %}
  {% if nextDoc or previousDoc %}
    <footer class="flex gap-x-4 mt-8 pt-4 border-t">
      {% if previousDoc %}
        <a href="{{ previousDoc.url}}" class="button-outline flex items-center gap-x-2 truncate">
          {% lucide "chevron-left", { "class": "h-4 w-4 shrink-0" } %}
          <span class="max-w-1/2 truncate">{{ previousDoc.title }}</span>
        </a>
      {% endif %}
      {% if nextDoc %}
        <a href="{{ nextDoc.url}}" class="button-outline flex items-center gap-x-2 ml-auto truncate">
          <span class="max-w-1/2 truncate">{{ nextDoc.title }}</span>
          {% lucide "chevron-right", { "class": "h-4 w-4 shrink-0" } %}
        </a>
      {% endif %}
      </footer>
  {% endif %}
{% endif %}
</file>

<file path="src/_includes/partials/footer.njk">
<footer class="flex items-center gap-x-3 p-4 lg:p-6 text-xs text-muted-foreground">
  <span>© <a class="hover:text-primary" href="https://ronanberder.com">Ronan Berder</a></span>
  <a class="hover:text-primary" href="/terms">Terms</a>
  <a class="hover:text-primary" href="/privacy">Privacy</a>
  <a class="ml-auto hover:text-primary" href="https://github.com/pages-cms" target="_blank">
    <svg fill="currentColor" class="h-4 w-4" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>GitHub</title><path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/></svg>
  </a>
  <a class="hover:text-primary" href="https://pagescms.org/chat" target="_blank">
    <svg fill="currentColor" class="h-4 w-4" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Discord</title><path d="M20.317 4.3698a19.7913 19.7913 0 00-4.8851-1.5152.0741.0741 0 00-.0785.0371c-.211.3753-.4447.8648-.6083 1.2495-1.8447-.2762-3.68-.2762-5.4868 0-.1636-.3933-.4058-.8742-.6177-1.2495a.077.077 0 00-.0785-.037 19.7363 19.7363 0 00-4.8852 1.515.0699.0699 0 00-.0321.0277C.5334 9.0458-.319 13.5799.0992 18.0578a.0824.0824 0 00.0312.0561c2.0528 1.5076 4.0413 2.4228 5.9929 3.0294a.0777.0777 0 00.0842-.0276c.4616-.6304.8731-1.2952 1.226-1.9942a.076.076 0 00-.0416-.1057c-.6528-.2476-1.2743-.5495-1.8722-.8923a.077.077 0 01-.0076-.1277c.1258-.0943.2517-.1923.3718-.2914a.0743.0743 0 01.0776-.0105c3.9278 1.7933 8.18 1.7933 12.0614 0a.0739.0739 0 01.0785.0095c.1202.099.246.1981.3728.2924a.077.077 0 01-.0066.1276 12.2986 12.2986 0 01-1.873.8914.0766.0766 0 00-.0407.1067c.3604.698.7719 1.3628 1.225 1.9932a.076.076 0 00.0842.0286c1.961-.6067 3.9495-1.5219 6.0023-3.0294a.077.077 0 00.0313-.0552c.5004-5.177-.8382-9.6739-3.5485-13.6604a.061.061 0 00-.0312-.0286zM8.02 15.3312c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9555-2.4189 2.157-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.9555 2.4189-2.1569 2.4189zm7.9748 0c-1.1825 0-2.1569-1.0857-2.1569-2.419 0-1.3332.9554-2.4189 2.1569-2.4189 1.2108 0 2.1757 1.0952 2.1568 2.419 0 1.3332-.946 2.4189-2.1568 2.4189Z"/></svg>
  </a>
  <a class="hover:text-primary" href="https://x.com/pagescms" target="_blank">
    <svg class="h-4 w-4" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" fill="currentColor"><title>X</title><path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/></svg>
  </a>
  <button class="hover:text-primary h-4 w-4" @click="darkMode = !darkMode">
    <template x-if="darkMode">{% lucide "sun", { "class" : "h-4 w-4" } %}</template>
    <template x-if="!darkMode">{% lucide "moon", { "class" : "h-4 w-4" } %}</template>
  </button>
</footer>
</file>

<file path="src/docs/configuration/number-field.md">
---
title: Number field
---

A field for numerical values (anya valid floating point number).

## Options

| Option | Type | Description |
| - | - | - |
| **`min`** | `string` | If defined, sets the minimum value for the field. |
| **`max`** | `string` | If defined, sets the maximum value for the field. |
| **`step`** | `string` | Defines the granularity of values. Behavior is the same as step for a [number input](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/number). |

## Example

```yaml
- name: age
  label: Age
  type: number
  options:
    min: 21
```
</file>

<file path="src/docs/configuration/object-field.md">
---
title: Object field
---

A list of nested fields. You can use [any of the fields defined for content](#fields), including `object` itself, allowing you to nest fields as much as needed.

## Options

*No options.*

## Example

```yaml
- name: contact
  label: Contact information
  type: object
  fields:
    - name: first_name
      label: First name
      type: string
    - name: last_name
      label: Last name
      type: string
    - name: email
      label: Email address
      type: string
    - name: phone
      label: Phone number
      type: string
```
</file>

<file path="src/docs/configuration/reference-field.md">
---
title: Reference field
---

A field that allows selecting items from another collection through an autocomplete dropdown.

## Options

| Option | Type | Description |
|--------|------|-------------|
| **`collection`** | string | Name of the collection to reference. |
| **`multiple`** | boolean | Allow selecting multiple references. |
| **`search`** | string | The field names to search in the referenced collection (defaults to "name"). |
| **`value`** | string | Template to use for the reference value (defaults to "{path}"). |
| **`label`** | string | Template to use for the display label (defaults to "{name}"). |
| **`image`** | string | Optional template for an image URL to display next to options. |

## Examples

Reference a single page:

```yaml
- name: featured_post
  label: Featured Post
  type: reference
  options:
    collection: posts
```

Reference multiple authors:

```yaml
- name: authors
  label: Authors
  type: reference
  options:
    collection: authors
    multiple: true
```

Customize the display with templates:

```yaml
- name: related_products
  label: Related Products
  type: reference
  options:
    collection: products
    multiple: true
    search: "title,description"
    value: "{id}"
    label: "{title} - ${price}"
    image: "{featured_image}"
```
</file>

<file path="src/docs/configuration/string-field.md">
---
title: String field
---

Single line text.

## Options

| Option | Type | Description |
| - | - | - |
| **`minlength`** | `integer` | If defined, sets the minimum length in characters.  |
| **`maxlength`** | `integer` | If defined, sets the maximum length in characters.  |

## Examples

```yaml
- name: description
  label: Description
  type: string
  options:
    minlength: 20
    maxlength: 160
```
</file>

<file path="src/docs/configuration/uuid-field.md">
---
title: UUID field
---

Generates a [Version 4 UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_4_(random)).

## Options

| Option | Type | Description |
| - | - | - |
| **`editable`** | `boolean` | If `false`, prevents the user from generating a new UUID after creation. Defaults to `true` |

## Example

```yaml
- name: identifier
  label: Identifier
  type: uuid
  options:
    editable: false
```
</file>

<file path="src/styles/carousel.css">
@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-720px);
  }
}

.infinite-scroll {
  animation: scroll 20s linear infinite;
}
</file>

<file path="package.json">
{
  "name": "docs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "clean": "rm -rf _site",
    "dev": "eleventy --serve & npx tailwindcss -i ./src/styles/main.css -o ./_site/styles.css --watch",
    "build": "ELEVENTY_PRODUCTION=true eleventy && NODE_ENV=production npx tailwindcss -i ./src/styles/main.css -o ./_site/styles.css --minify"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pages-cms/docs.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/pages-cms/docs/issues"
  },
  "homepage": "https://github.com/pages-cms/docs#readme",
  "devDependencies": {
    "@11ty/eleventy": "^2.0.1",
    "@tailwindcss/forms": "^0.5.7",
    "alpinejs": "^3.13.5",
    "htmx.org": "^1.9.10",
    "markdown-it-anchor": "^8.6.7",
    "tailwindcss": "^3.4.0"
  },
  "dependencies": {
    "@grimlink/eleventy-plugin-lucide-icons": "^2.0.2",
    "eleventy-plugin-toc": "^1.1.5"
  }
}
</file>

<file path="README.md">
# PagesCMS.org

This is the official website for Pages CMS, deployed at [PagesCMS.org](PagesCMS.org). It includes [the official documentation](https://pagescms.org/docs).

It is built with 11ty + Tailwind and is hosted on Cloudflare Pages.

## Install & Run

1. Clone the repo: `git clone git@github.com:pages-cms/website.git`
2. Install the dependencies: `cd website && npm install`
3. Run it: `npm run dev`
4. Visit it: `http://localhost:8080/
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{njk,html,md,js}"],
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      fontFamily: {
        inter: ["Inter", "sans-serif"],
      },
    },
  },
  darkMode: ["class"],
}
</file>

<file path="src/_includes/layouts/docs.njk">
---
layout: layouts/base.njk
---
<div class="flex max-md:flex-col max-w-7xl mx-auto px-4 my-8 lg:px-8 lg:my-12 gap-x-8">
  <div class="md:w-80 max-md:mb-4">
    <div class="navigation md:pr-8 md:border-r" x-data="{ showNav: false }">
      <button @click="showNav = !showNav" class="button-outline flex items-center gap-x-2 w-full md:hidden mb-2">
        <span x-text="showNav ? 'Hide navigation' : 'Show navigation'"></span>
        <template x-if="!showNav">{% lucide "chevrons-up-down", { "class" : "ml-auto h-4 w-4" } %}</template>
        <template x-if="showNav">{% lucide "chevrons-down-up", { "class" : "ml-auto h-4 w-4" } %}</template>
      </button>
      <div class="max-md:max-h-0 overflow-hidden duration-200 transition-all" :style="showNav ? 'max-height: ' + $refs.navigation.offsetHeight + 'px' : ''">
        <div x-ref="navigation" class="max-md:border max-md:rounded-md max-md:p-4 max-md:text-sm">
          {% include "partials/docs/navigation.njk" %}
        </div>
      </div>
    </div>
  </div>
  
  <div class="w-full">
    <div class="prose">
      <h1 class="!mb-8">{{ title }}</h1>
      {{ content | safe }}
    </div>
    {% include "partials/docs/footer.njk" %}
  </div>
  
  <div class="w-64 max-lg:hidden">
    <div class="sticky top-16 text-sm">
      <h2 class="font-semibold track-tight">On this page</h2>
      {{ content | toc | safe }}
    </div>
  </div>
</div>

<link x-bind:href="darkMode ? 'https://unpkg.com/@highlightjs/cdn-assets@11.9.0/styles/github-dark.min.css' : 'https://unpkg.com/@highlightjs/cdn-assets@11.9.0/styles/github.min.css'" rel="stylesheet">
<script src="https://unpkg.com/@highlightjs/cdn-assets@11.9.0/highlight.min.js"></script>
<script src="https://unpkg.com/@highlightjs/cdn-assets@11.9.0/languages/yaml.min.js"></script>
<script>document.addEventListener('DOMContentLoaded', function() { hljs.highlightAll(); });</script>
</file>

<file path="src/_includes/partials/docs/navigation.njk">
{% macro renderMenu(items) %}
  <ul class="flex flex-col gap-y-4">
    {% for item in items %}
      <li x-data="{ open: {{ 'true' if page.url.startsWith(item.url) else 'false' }} }">
        <div class="flex gap-x-2 items-center">
          <a href="{{ item.url }}" class="flex items-center rounded-lg font-mdedium text-sm text-muted-foreground hover:text-primary outline-none{{ ' text-primary font-medium' if item.url == page.url }}">
            {{ item.title }}
          </a>
          {% if item.children.length %}
            <button class="ml-auto text-muted-foreground hover:text-inherit transition-all duration-200" @click="open = !open" :class="open ? 'rotate-90' : ''">
              {% lucide "chevron-right", { "class" : "h-4 w-4 shrink-0" } %}
            </button>
          {% endif %}
        </div>
        {% if item.children.length %}            
          <div class="max-h-0 overflow-hidden duration-200 transition-all" :style="open ? 'max-height: ' + $el.scrollHeight + 'px' : ''" style="{{ 'max-height: 100%;' if page.url.startsWith(item.url) }}">
            {% if item.children %}
              {{ renderMenu(item.children) }}
            {% endif %}
          </div>
        {% endif %}
      </li>
    {% endfor %}
  </ul>
{% endmacro %}

{{ renderMenu(collections.menu) }}
</file>

<file path="src/docs/configuration/file-field.md">
---
title: File field
---

A field allowing users to upload and select any type of file. By default, it uses [the media configuration](/docs/configuration#media), but can be customized using the field's options.

## Options

| Option | Type | Description |
| - | - | - |
| **`media`** | `string` | Name of the media configuration to use. If not specified, uses the first media configuration defined in your schema. |
| **`path`** | `string` | The default path when opening the file browser. Must be within the configured media folder. |
| **`multiple`** | `boolean` or `object` | Allow selecting multiple files. When set to `true`, allows unlimited files. When set to an object, can include `min` and `max` properties to constraint the number of files. |
| **`multiple.min`** | `number` | Minimum number of files that must be selected when `multiple` is enabled. |
| **`multiple.max`** | `number` | Maximum number of files that can be selected when `multiple` is enabled. |
| **`extensions`** | `string[]` | An array of file extensions that should be allowed. **Note**: this is on top of the allowed extensions/categories for the media selected for this field. |
| **`categories`** | `string[]` | Filter files by category: `image` (`jpg`, `jpeg`, `png`, `gif`, `svg`, `bmp`, `tif`, `tiff`), `document` (`pdf`, `doc`, `docx`, `ppt`, `pptx`, `vxls`, `xlsx`, `txt`, `rtf`), `video` (`mp4`, `avi`, `mov`, `wmv`, `flv`), `audio` (`mp3`, `wav`, `aac`, `ogg`, `flac`), `compressed` (`zip`, `rar`, `7z`, `tar`, `gz`, `tgz`), `code` (various programming languages), `font` (font files), and `spreadsheet` (spreadsheet files). **Note**: this is on top of the allowed extensions/categories for the media selected for this field|

## Examples

A simple file field using the default media configuration:

```yaml
- name: attachment
  label: Attachment
  type: file
```

Allow selecting multiple files with a limit:

```yaml
- name: documents
  label: Documents
  type: file
  options:
    multiple:
      max: 5
```

Specify a custom path and limit file types to PDFs:

```yaml
- name: resources
  label: Resources
  type: file
  options:
    path: downloads
    extensions: [pdf]
```

Allow only document files using the category filter:

```yaml
- name: resources
  label: Resources
  type: file
  options:
    categories: [document]
```

Allow uploading compressed archives:

```yaml
- name: downloads
  label: Downloads
  type: file
  options:
    multiple: true
    categories: [compressed]
```
</file>

<file path="src/docs/configuration/rich-text-field.md">
---
title: Rich-text field
---

Rich-text editor powered by [TipTap (ProseMirror)](https://github.com/ueberdosis/tiptap), providing a powerful WYSIWYG experience with support for formatting, tables, images, and more.

## Options

| Option | Type | Description |
| - | - | - |
| **`media`** | `string` or `boolean` | Name of the media configuration to use for images. If not specified, uses the first media configuration defined in your schema. Set to `false` to disable image support. |
| **`path`** | `string` | The default path when opening the file browser for images. Must be within the configured media folder. |
| **`extensions`** | `string[]` | An array of file extensions that should be allowed for images. **Note**: These are intersected with the extensions defined in the media configuration, so only extensions allowed by both will be available. |

## Features

- **Text formatting**: Bold, italic, underline, strikethrough, code
- **Block types**: Headings (1-3), paragraphs, bulleted lists, numbered lists, blockquotes, code blocks
- **Text alignment**: Left, center, right, justify
- **Tables**: Insert and edit tables with options to add/remove rows and columns
- **Links**: Add, edit, and remove hyperlinks
- **Images**: Insert images from media library with support for alt text
- **Slash commands**: Type `/` to access quick commands for inserting various elements

## Examples

A simple rich-text field using the default media configuration:

```yaml
- name: body
  label: Body
  type: rich-text
```

Specify a custom path for images and limit file types:

```yaml
- name: content
  label: Content
  type: rich-text
  options:
    path: blog-images
    extensions: [jpg, jpeg, png]
```

Use a specific media configuration:

```yaml
- name: description
  label: Description
  type: rich-text
  options:
    media: product_images
```

Disable image support:

```yaml
- name: notes
  label: Notes
  type: rich-text
  options:
    media: false
```
</file>

<file path="src/styles/prose.css">
.prose > * {
  @apply first:!mt-0 last:!mb-0;
}

.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 {
  @apply font-semibold tracking-tight scroll-m-16;
}

.prose h1,
.prose h2,
.prose h3 {
  @apply my-6;
}

.prose h1 {
  @apply text-3xl lg:text-4xl;
}

.prose h2 {
  @apply text-xl lg:text-2xl;
}

.prose h3 {
  @apply text-base lg:text-lg;
}

.prose h4,
.prose h5,
.prose h6 {
  @apply text-base my-4;
}

.prose p,
.prose blockquote,
.prose ul,
.prose ol {
  @apply my-6 first:mt-0;
}

.prose code {
  @apply text-[90%] bg-muted rounded-sm py-1 px-1.5;
}

.prose pre code {
  @apply p-2 block break-words whitespace-pre-wrap;
}

.prose ul,
.prose ol {
  @apply pl-5 mb-4;
}

.prose ul li,
.prose ol li {
  @apply my-2 last:mb-0 first:mt-0;
}

.prose ul li > p,
.prose ol li > p {
  @apply m-0;
}

.prose ul li ul,
.prose ul li ol,
.prose ol li ul,
.prose ol li ol {
  @apply my-2;
}

.prose ul {
  @apply list-disc;
}

.prose ol {
  @apply list-decimal;
}

.prose a {
  @apply text-primary underline hover:decoration-muted-foreground	 underline-offset-2;
}

.prose blockquote {
  @apply pl-4 ml-1 border-l-2;
}

.prose img,
.prose svg,
.prose video,
.prose canvas,
.prose audio,
.prose iframe,
.prose embed,
.prose object {
  @apply inline-block;
}

.prose table {
  @apply table text-sm;
}

.prose table tr {
  @apply border-b;
}

.prose table th {
  @apply text-muted-foreground text-xs font-medium text-left align-middle px-3 first:pl-0 last:pr-0 h-12;
}

.prose table td {
  @apply align-middle px-3 py-3 first:pl-0 last:pr-0;
}

.prose table td strong code {
  @apply font-medium text-[#005cc5];
}

html.dark .prose table td strong code {
  @apply font-medium text-[#79c0ff];
}
</file>

<file path="src/docs/configuration/date-field.md">
---
title: Date field
---

Either a date or a date and time field, similar to the [date](ttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date) and [datetime](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local) inputs.

## Options

| Option | Type | Description |
| - | - | - |
| **`format`** | `string` | The date (or datetime) format (e.g. `dd/MM/yyyy`). This should be a valid [date-fns format string](https://date-fns.org/v3.6.0/docs/format). Default to `yyyy-MM-dd`, or `yyyy-MM-dd'T'HH:mm` if `time` is `true` (see below). |
| **`time`** | `string` | If `true`, the field will allow the user to pick a date and a time using a `<datetime>` field. Default is `false`. |
| **`min`** | `string` | The earliest date to accept. If undefined, there is no min date. **This must be formatted as a standard [min value for a date input (i.e. `yyyy-mm-dd`)](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#min) or [min value for a datetime input (i.e. `YYYY-MM-DDThh:mm`)](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#min)**. |
| **`min`** | `string` | The latest date to accept. If undefined, there is no max date. **This must be formatted as a standard [max value for a date input (i.e. `yyyy-mm-dd`)](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date#max) or [max value for a datetime input (i.e. `YYYY-MM-DDThh:mm`)](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local#max)**. |
| **`step`** | `string` | Defines the granularity of values: number of days, or number of seconds if `time` is set to `true`. Behavior is the same as step for [date](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date) and [datetime](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/datetime-local) inputs. |

## Examples

A simple example for a date that must be be December 24, 2023 or after:

```yaml
- name: created
  label: Creation date
  type: date
  options:
    format: dd-MM-yyyy
    min: 2023-12-24 # Must be on or after December 24, 2023. Notice it uses the format defined above.
```

Another example with time:

```yaml
- name: start_time
  label: Starts at 
  options:
    time: true
    format: dd-MM-yyyy HH:mm
```
</file>

<file path="src/docs/custom-fields.md">
---
title: Custom fields
order: 4
---
Fields define how content gets displayed and edited. Pages CMS comes with a few built-in fields, but you can also add your own custom fields.

## The fields folder

All fields are saved in the `src/fields` folder:

```Plaintext
fields/
├─ core/
│  ├─ boolean/
│  ├─ code/
│  ├─ date/
│  ├─ image/
│  ├─ number/
│  ├─ ...
├─ custom/
│  ├─ README.md
├─ registry.js
```

*   `core/` is where all the built-in fields are saved (e.g. boolean, code, date). The names of the fields subfolders match the types used in the configuration file (e.g. `type: boolean`).
    
*   `custom/` (empty by default) is used to host the subfolders for custom fields.
    
*   `registry.js` is a helper function to create registries for the fields.

## Individual fields

Each field folder (e.g. `fields/core/boolean`) should include an `index.ts` or `index.tsx` file that can export:

- `schema`: a [Zod schema](https://zod.dev/) used to process the field when saving. This is used for validation and format coertion.
- `supportsList`: a boolean defining whether or not the field handles lists internally rather than using the default list behavior. Check `fields/core/image` for an example.
- `read`: a function used to convert the field value when reading from a file (e.g. `fields/core/date` will convert from the `format` defined for that date field to a standard ISO 8601 date/datetime).
- `write`: a function used to convert the field value when writing to a file (e.g. `fields/core/date` will convert from a standard ISO 8601 date/datetime to the `format` defined for that date field).
- `EditComponent`: a React component used to edit the field.
- `ViewComponent`: a React component used to display the field in a collection.
- `defaultValue`: defines the default value for the field.

## Example: `fields/core/boolean`

Let's have a look at the `fields/core/boolean` folder, which defines boolean fields:

```Plaintext
fields/
├─ core/
│  ├─ boolean/
│  │  ├─ edit-component.tsx
│  │  ├─ index.tsx
│  │  ├─ view-component.tsx
```

### Edit component

`edit-component.tsx` is the React component used in the editor (for both creating or editing content). It is called by `components/entry/entry-form.tsx` via the `editComponents` registry.

In the case of the boolean field, it is a simple toggle switch:

```javascript
"use client";

import { forwardRef } from "react";
import { Switch } from "@/components/ui/switch";

const EditComponent = forwardRef((props: any, ref: React.Ref<HTMLInputElement>) => {
  return (
    <div>
      <Switch
        {...props}
        ref={ref}
        checked={props.value}
        onCheckedChange={props.onChange}
      />
    </div>
  );
});

export { EditComponent };
```

### View component

`view-component.tsx` is the React component used to display the field value in collections. It is called by `components/collection/collection-view.tsx` via the `viewComponents` registry.

For boolean fields, we displayed a colored chip with the labels "True" or "False" if the value is defined, or nothing otherwise (`undefined` or `null`):

```javascript
"use client";

const ViewComponent = ({ value }: { value: boolean}) => {
  return (
    <>
      {value == null
        ? null
        : value
          ? <span className="inline-block rounded-md bg-primary text-primary-foreground px-2 py-0.5 text-xs font-medium">True</span>
          : <span className="inline-block rounded-md border bg-muted px-2 py-0.5 text-xs font-medium">False</span>
      }
    </>
  );
};

export { ViewComponent };
```

### Field registration

`index.tsx` registers the field. **It is required for your field to work**.

For the boolean field, this means exporting the edit/view components, the default value and the schema:

```javascript
import { z } from "zod";
import { Field } from "@/types/field";
import { EditComponent } from "./edit-component";
import { ViewComponent } from "./view-component";

const defaultValue = false;

const schema = (field: Field) => {
  let zodSchema = z.coerce.boolean();

  return zodSchema;
};

export { EditComponent, ViewComponent, defaultValue, schema };
```

Notice that we define a default value (`false`) and coerce the field to a boolean in the schema function. This will ensure we're saving a boolean in the file, and not a string.

In some cases (e.g. the image field), we may also indicate support for lists with `supportsList`, and define `read` and `write` functions to convert the input and output values (when reading from or writing to the file).
</file>

<file path="src/_includes/layouts/base.njk">
<!DOCTYPE html>
<html
  lang="en"
  x-data="{
    darkMode: localStorage.getItem('dark') ? localStorage.getItem('dark') === 'true' : window.matchMedia('(prefers-color-scheme: dark)').matches
  }"
  x-init="$watch('darkMode', val => localStorage.setItem('dark', val))"
  x-bind:class="{ 'dark': darkMode }">
<head>
  <meta charset="UTF-8"/>
  <title>{{ site.title + ": " + title if page.url === "/" else title + " - " + site.title }}</title>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <meta name="description" content="{{ description or site.description }}"/>
  <link rel="stylesheet" type="text/css" href="/styles.css?build={% now %}"/>
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="apple-touch-icon" type="image/png" sizes="180x180" href="/apple-touch-icon.png">
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <meta property="og:type" content="{{ type or 'website' }}"/>
  <meta property="og:title" content="{{ site.title + ": " + title if page.url === "/" else title + " - " + site.title }}"/>
  <meta property="og:description" content="{{ description or site.description }}"/>
  <meta property="og:url" content="{{ site.url + page.url }}"/>
  <meta property="og:image" content="{{ site.url }}/cover@2x.png"/>
  <meta name="twitter:card" content="summary_large_image"/>
  <meta name="twitter:site" content="@pagescms"/>
  <meta name="twitter:url" content="{{ site.url + page.url }}"/>
  <meta name="twitter:title" content="{{ site.title + ": " + title if page.url === "/" else title + " - " + site.title }}"/>
  <meta name="twitter:description" content="{{ description or site.description }}"/>
  <meta name="twitter:image" content="{{ site.url }}/cover@2x.png"/>
  <script src="/js/alpine.js" defer></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="bg-background antialiased font-inter">
  {% include "partials/header.njk" %}
  {{ content | safe }}
  {% include "partials/footer.njk" %}
  {% include "partials/analytics.njk" %}
</body>
</html>
</file>

<file path="src/docs/configuration/image-field.md">
---
title: Image field
---

A field allowing users to upload and select images. By default, it uses [the media configuration](/docs/configuration#media), but can be customized using the field's options.

## Options

| Option | Type | Description |
| - | - | - |
| **`media`** | `string` | Name of the media configuration to use. If not specified, uses the first media configuration defined in your schema. |
| **`path`** | `string` | The default path when opening the file browser. Must be within the configured media folder. |
| **`multiple`** | `boolean` or `object` | Allow selecting multiple images. When set to `true`, allows unlimited images. When set to an object, can include `min` and `max` properties to constraint the number of images. |
| **`multiple.min`** | `number` | Minimum number of images that can be selected when `multiple` is enabled. |
| **`multiple.max`** | `number` | Maximum number of images that can be selected when `multiple` is enabled. |
| **`extensions`** | `string[]` | An array of file extensions that should be allowed. Only files with these extensions will be shown or accepted for upload. **Note**: this is on top of the allowed extensions/categories for the media selected for this field. |

## Examples

A simple image field using the default media configuration:

```yaml
- name: cover
  label: Cover Image
  type: image
```

Allow selecting multiple images with a limit:

```yaml
- name: gallery
  label: Image Gallery
  type: image
  options:
    multiple:
      max: 6
```

Specify a custom path and limit file types:

```yaml
- name: screenshots
  label: Screenshots
  type: image
  options:
    path: screenshots
    extensions: [jpg, png]
```

Use a specific media configuration and allow selecting SVG files using the category filter:

```yaml
- name: icon
  label: Icon
  type: image
  options:
    media: vector_assets
    categories: [image]
    extensions: [svg]
```
</file>

<file path="src/docs/index.md">
---
title: Getting started
order: 1
---
## What is Pages CMS?

[Pages CMS](https://pagescms.org) is an [Open Source](https://github.com/pages-cms/pages-cms) Content Management System built for static websites (Jekyll, Next.js, VuePress, Hugo, etc).

It allows you to edit your website's content directly on GitHub via a user-friendly interface.

To use it, you just need to add [a simple configuration file](/docs/configuration) that describes the structure of your content and media.

## How to use Pages CMS?

### Use the online version

The easiest way to get started is to use [the online version of Pages CMS](https://app.pagescms.org). You'll simply need to log in with your GitHub account and [configure your website](/docs/configuration).

This online version runs the latest version from [the public repository](https://github.com/pages-cms/pages-cms).

<a class="button !text-primary-foreground !no-underline" href="https://app.pagescms.org">Sign in with GitHub</a>

### Install or deploy your own version

You can install your own version locally or deploy it (for free) on [Vercel](https://vercel.com) by [following the README](https://github.com/pages-cms/pages-cms/#install-and-deploy):

<a class="button !text-primary-foreground !no-underline" href="https://github.com/pages-cms/pages-cms/#README">Get the source code on GitHub</a>
</file>

<file path="src/styles/main.css">
@import './prose.css';
@import './carousel.css';
/* @import './highlightjs.css';
@import './custom.css';
@import './carousel.css';
@import './modal.css'; */

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 85.8%;
    --input: 0 0% 85.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 19.9%;
    --input: 0 0% 19.9%;
    --ring: 0 0% 83.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.button {
  @apply inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 bg-primary text-primary-foreground hover:bg-primary/90 h-10 px-4 py-2;
}

.button-outline {
  @apply inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2;
}

.navigation ul ul {
  @apply pl-4 pt-4;
}

.toc li {
  @apply mt-2;
}

.toc a {
  @apply text-primary underline hover:decoration-muted-foreground	 underline-offset-2;
}

.toc ol ol {
  @apply pl-4;
}
</file>

<file path="src/_includes/partials/header.njk">
<header class="border-b flex items-center gap-x-4 py-2 px-4 lg:py-3 lg:px-6 mx-auto sticky top-0 w-full bg-background z-50">
  <a class="inline-flex items-center" href="/">
    <svg class="max-sm:h-4 max-sm:w-4 h-5 w-5" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
      <path d="M0 4.8C0 2.14903 2.14903 0 4.8 0H12.0118C13.2848 0 14.5057 0.505713 15.4059 1.40589L22.5941 8.59411C23.4943 9.49429 24 10.7152 24 11.9882V19.2C24 21.851 21.851 24 19.2 24H4.8C2.14903 24 0 21.851 0 19.2V4.8Z"/>
    </svg>
    <span class="hidden sm:inline-block ml-2 text-sm font-semibold">Pages CMS</span>
  </a>
  <a class="ml-auto text-sm font-medium text-muted-foreground hover:text-primary {{ '!text-primary font-medium' if page.url == '/' }}" href="/">
    About
  </a>
  <a class="text-sm font-medium text-muted-foreground hover:text-primary {{ '!text-primary' if '/docs' in page.url }}" href="/docs">
    Docs
  </a>
  <a class="flex gap-x-1 items-center text-sm font-medium text-muted-foreground hover:text-primary" href="https://github.com/pages-cms/pages-cms" target="_blank">
    GitHub
    {% lucide "arrow-up-right", { "class" : "h-3 w-3" } %}
  </a>
  <a class="flex gap-x-1 items-center text-sm font-medium text-muted-foreground hover:text-primary" href="https://pagescms.org/chat" target="_blank">
    Discord
    {% lucide "arrow-up-right", { "class" : "h-3 w-3" } %}
  </a>
  <a class="button-outline !h-8" href="https://app.pagescms.org">
    Sign in
  </a>
</header>
</file>

<file path="src/docs/configuration.md">
---
title: Configuration
order: 2
---
## The .pages.yml file

![Media](/media/screenshots/nextjs-settings-light@2x.png)

To configure Pages CMS you just need to add a `.pages.yml` file to the repository (and branch) that hosts your content and media. If this file isn't there when you open your repository/branch in Pages CMS, you will be presented with a link to add one via the Pages CMS interface.

You can have different configuration files on separate branches. The Pages CMS interface allows you to navigate between them (click on the name of repository at the top of the sidebar and then select the branch in the dropdown menu).

The `.pages.yml` file contains mainly 2 sections:

- **media**: the settings for media (images, videos, etc). [See the "Media" section below](#media).
- **content**: an array defining the content types. [See the "Content" section below](#content).

<p class="aspect-video">
  <iframe class="h-full w-full rounded-lg" src="https://youtube.com/embed/KtoapCOT1j4" width="100%" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</p>

## Media

With media, you can configure how to handle files you want to upload, attach to or embed in your content. `media` can be a string, a single object or an array of objects depending on whether you want a single or multiple media folders and configurations.

![Media](/media/screenshots/nextjs-media-light@2x.png)

### Keys

| Key | Type | Description |
| - | - | - |
| **`name`** | `string` | **Required if media is an array. Must be unique across the media array**. Machine name for the media entry. |
| **`label`** | `string` | Display name for the media. This will be displayed in the main menu. |
| **`input`**| `string` | The path to the media folder relative to the root of the repo (e.g. `src/files/media`). This path is what allows us to find the files in Pages CMS to manage content and media. |
| **`output`** | `string` | The path to the media folder relative to the root of the website (e.g. `files/media`). This path will prefix all media saved in our content, which will be used by your static site generator. |
| **`path`** | `string` | The default path to present the user (e.g. when opening the media browser on an [Image Field](/docs/configuration/image-field)). |
| **`extensions`** | `string` | An array of file extensions that should be displayed. If provided, any file with an extension not included in this list will not be shown to the user. |
| **`categories`** | `string` | Similar to `media.extensions`, but using categories of files: `image` (`jpg`, `jpeg`, `png`, `gif`, `svg`, `bmp`, `tif`, `tiff`), `document` (`pdf`, `doc`, `docx`, `ppt`, `pptx`, `vxls`, `xlsx`, `txt`, `rtf`), `video` (`mp4`, `avi`, `mov`, `wmv`, `flv`), `audio` (`mp3`, `wav`, `aac`, `ogg`, `flac`) and `compressed` (`zip`, `rar`, `7z`, `tar`, `gz`, `tgz`). If both `media.extensions` and `media.categories` are provided, `media.categories` will be ignored. |

If `media` is set to a `string`, it is equivalent to settings both `media.input` and `media.output` to that value, prefixed with `/` for `media.output`.

For example, `media: files/media` would be equivalent to:

```yaml
media:
  input: files/media
  output: /files/media
```

If we want to define multiple media configurations, we can use an array (see examples below).

### Examples

Let's assume the content for my website is at the root of my repo:

```yaml
media: files/media
```

Now, if the content for this website was in a `src/` subfolder, it could look like this:

```yaml
media:
  input: src/media
  output: media
```

Let's assume now that I'm hosting my website in a subfolder (e.g. hosted at `http://example.com/my-website/`), I may want to do the following:

```yaml
media:
  input: src/media
  output: /my-website/media
```

Now, if I want to use a `files/documents` folder only for document uploads (e.g. pdf, doc, ppt) and another `images` folder with my photos that must be in `.png` or `.webp` formats, we could do the following:

```yaml
media:
  - name: files
    label: Files
    input: files/documents
    output: /files/documents
    categories: [ document ]
  - label: images
    label: Images
    input: images
    output: /images
    extensions: [ png, webp ]
```

## Content

Content managed by the users: collections (e.g. blog posts) and file types (e.g. the home page). The `content` key should be set as an array of content entries.

![Collection view](/media/screenshots/nextjs-collection-light@2x.png)

### Keys

Each content entry can define the following keys:

| Key | Type | Description |
| - | - | - |
| **`name`** | `string` | **Required and must be unique across the content array**. Machine name for the content entry. |
| **`label`** | `string` | Display name for the collection or single file. This will be displayed in the main menu. |
| **`type`**| `string` | **Required**. `collection` or `file`, depending on whether the content entry is a collection of files with an identical schema (e.g. blog posts) or a single file (e.g. home page). |
| **`path`** | `string` | **Required**. Path to the folder where the files are stored if it's a collection (e.g. `path: src/posts`, otherwise the path to the single file (e.g. `path: src/index.md`). |
| **`fields`** | `string` | The list of fields defining the schema of the content entry (e.g. title, date, author, body, etc). [See the "Fields" section below](#fields). |
| **`filename`** | `string` | The pattern to generate the filename when creating a new file. You can use the value of any field (e.g. `fields.title`) including nested values (e.g. `fields.tags[0].label`). You can also use a few date tokens (`{year}`, `{month}`, `{day}`) and time (`{hour}`, `{minute}`, `{second}`) and `{primary}` for the primary field as defined in the `view` key. By default this is set to `'{year}-{month}-{day}-{primary}.md'`. |
| **`exclude`** | `array` | An array of files to exclude from the collection (e.g. `[ README.md ]`). This is only valid for collections.
| **`view`** | `object` | **Only valid for collections**. This object defines the various options for the collection view; visible fields, sorting options and defaults, fields indexed for the search... [See the "View" section below](#view). |
| **`format`** | `string` | The format of the file, used to set up the editor to edit the content: `yaml-frontmatter`, `json-frontmatter`, `toml-frontmatter`, `yaml`, `json`, `toml`, `datagrid`, `code` or `raw`. It defaults to `yaml-frontmatter`. |
| **`subfolders`** | `boolean` | Whether or not the collection should display subfolders. Default to `true`. Set to `false` if you want to force the collection of files to be "flat". |

### Examples

Let's assume we have a simple collection of blog posts all saved in the `src/_posts` folder:

```yaml
content:
  - name: posts
    label: Posts
    path: src/_posts
    type: collection
    fields:
      (...)
  - name: authors
    label: Authors
    path: src/_data/authors.json
    type: file
    fields:
      (...)
```

### View

The `view` object is only valid for `type: collection` content entries. It defines the configuration for the collection view, aka the page that lists the entries for a collection which is accessed from the main menu under a specific repo/branch (e.g. `https://app.pagescms.org/pages-cms/template-nextjs/content/posts/`).

#### Keys

| Key | Type | Description |
| - | - | - |
| **`fields`** | `array` | List of the fields to be displayed in the collection view (e.g. `fields: [ title, published, author ]`). This can include nested fields and values (e.g. `fields: [ title, published, "tags[0]", author.name ]`). If not defined, it defaults to just the primary field (see below). The order of the fields is kept in the collection view. |
| **`primary`** | `string` | The name of the field that should be used as the primary field (e.g. `primary: title`). If undefined, it will be set to the `title` field if it exists, otherwise the first field define in the content entry (e.g. `content.posts.fields[0].name`). |
| **`sort`** | `array` | The list of fields that the collection can be sorted by (e.g. `sort: [ date, title ]`). By default, it is set to the date (if any) and the primary field. |
| **`search`** | `array` | The list of fields that should be indexed for search. By default, all fields are indexed. |
| **`default`** | `object` | Define the default values for search and sorting: `{ search: 'My keywords', sort: title, order: asc }`). `default.order` can be `asc` or `desc`. By default, `default.search` is empty, `default.sort` is the first field in the `sort` array and `default.order` is set to `desc`. |

#### Examples

Assuming you have a `date` field and `title` is the primary field, your default configuration would look like:

```yaml
view:
  fields: [ title ]
  primary: title
  sort: [ date, title ]
  default:
    search: ''
    sort: title
    order: desc
```

This would display the title of each post and sort them by title in descendant order (start with special characters and numbers, all the way to `z`).

Let's assume we also have the following:

- `published`, a boolean that defines whether or not the post is published,
- `author`, a string set to the name of the author.

Let's set the view to only display the posts from `Patricia`, display title, date and the published state with the newer posts first:

```yaml
view:
  fields: [ title, date, published ] # title is the first entry and thus will be set to primary
  sort: [ date, title, published ]
  default:
    search: 'author:Patricia'
    sort: date
    sort: desc
```

The `author:Patricia` syntax [comes from lunr.js](https://lunrjs.com/guides/searching.html#fields), the search library used by Pages CMS under the hood. Other syntax will work too (wildcards, boosts, fuzzy matches and term presence).

### Fields

#### Keys

| Key | Type | Description |
| - | - | - |
| **`name`** | `string` | **Required and must be unique across the fields array**. Machine name for the field. **`body` is reserved for the body of the file when dealing with a frontmatter file (e.g. YAML frontmatter)**. |
| **`label`** | `string` | Display name for the field. This is what is displayed in the edit form. |
| **`description`** | `string` | Default value. |
| **`type`** | `string` | Defines the type of field: **[boolean](/docs/configuration/boolean-field)**, **[code](/docs/configuration/code-field)**, **[date](/docs/configuration/date-field)**, **[image](/docs/configuration/image-field)**, **[number](/docs/configuration/number-field)**, **[object](/docs/configuration/object-field)**, **[rich-text](/docs/configuration/rich-text-field)**, **[select](/docs/configuration/select-field)**, **[string](/docs/configuration/string-field)** or **[text](/docs/configuration/text-field)**. If undefined or set to a field that doesn't exist, it defaults to `text`. |
| **`default`** | | Default value. |
| **`list`** | `boolean` or `object` | If truthy, the field is an array of values (of the type defined for the field). [See the "View" section below](#view). |
| **`hidden`** | `boolean` | If `true`, the field will not be displayed in the form but will be saved. It is usually used with `default` to set a required field that shouldn't be edited by users, like for example the language of a post (`lang: en-US`). |
| **`required`** | `boolean` | If `true`, the field can't be empty. |
| **`pattern`** | `string` or `object` | A regular expression to validate the field. A custom message for the error can be provided by defining an object with `regex` and `message` attributes (e.g. `pattern: { regex: 'This must be a valid email address (e.g. hello@example.com).', message: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$' }`) |
| **`fields`** | `array` | **Only valid for object fields**. List of the fields in that object. |
| **`options`** | `object` | Options for that field. Refer to the field specific details below. |

#### List

Any field with a truthy `list` key will be stored as an array of that field type. For example:

```yaml
name: images
label: Images
type: image
list: true
```

Will allow the user to save multiple image paths:

```yaml
images:
  - media/image-1.png
  - media/image-2.png
```

`list` can be an object with `min`, `max` and `default` keys. `min` and `max` define the minimum and maximum number of entries in the array. For example:

```yaml
name: images
label: Images
type: image
list:
  min: 1
  max: 4
```

This will force the user to enter at least 1 image and at most 4.

Certain fields (e.g. the [image field(/docs/configuration/image-field)]) implement their own list logic. If you want to use the default list widget, you may set `default` to true.

#### Types

- [Boolean field](/docs/configuration/boolean-field)
- [Code field](/docs/configuration/code-field)
- [Date field](/docs/configuration/date-field)
- [Image field](/docs/configuration/image-field)
- [Number field](/docs/configuration/number-field)
- [Object field](/docs/configuration/object-field)
- [Rich-text field](/docs/configuration/rich-text-field)
- [Select field](/docs/configuration/select-field)
- [String field](/docs/configuration/string-field)
- [Text field](/docs/configuration/text-field)
</file>

<file path="src/index.njk">
---
layout: layouts/base.njk
title: CommandBridge
description: High-performance proxy ↔ server command integration for Minecraft networks.
---

<div class="relative isolate z-0 w-full">
  <canvas id="cb-background" class="fixed inset-0 -z-10 h-full w-full pointer-events-none"></canvas>

  <div class="relative max-w-6xl mx-auto px-4 py-24 sm:px-6 lg:px-8">
    <div class="text-center">
      <h1 class="text-5xl font-extrabold tracking-tight sm:text-6xl lg:text-7xl text-white/90 drop-shadow">
        CommandBridge
      </h1>
      <p class="mt-6 text-lg sm:text-xl lg:text-2xl text-white/70 max-w-2xl mx-auto">
        Seamless Velocity ↔ Paper command synchronization. Lightning-fast. Developer-first.
      </p>
    </div>

    <div class="mt-16 flex justify-center">
      <div class="w-full max-w-5xl rounded-xl shadow-xl backdrop-blur bg-white/5 ring-1 ring-white/10 overflow-hidden aspect-video" id="bridge-container">
        <canvas id="cb-bridge" class="w-full h-full"></canvas>
      </div>
    </div>
  </div>
</div>

<script type="module">
  import * as THREE from 'https://cdn.skypack.dev/three@0.160.0';

  const bgCanvas = document.getElementById('cb-background');
  const bgRenderer = new THREE.WebGLRenderer({ canvas: bgCanvas, alpha: true });
  const bgScene = new THREE.Scene();
  const bgCamera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 100);
  bgCamera.position.z = 10;
  const torus = new THREE.Mesh(
    new THREE.TorusKnotGeometry(5, 1.5, 150, 32),
    new THREE.MeshBasicMaterial({ color: 0x66ccff, wireframe: true })
  );
  bgScene.add(torus);
  bgRenderer.setSize(window.innerWidth, window.innerHeight);

  const fgCanvas = document.getElementById('cb-bridge');
  const fgRenderer = new THREE.WebGLRenderer({ canvas: fgCanvas, alpha: true });
  const fgScene = new THREE.Scene();
  const fgCamera = new THREE.PerspectiveCamera(45, fgCanvas.clientWidth / fgCanvas.clientHeight, 0.1, 100);
  fgCamera.position.z = 8;
  fgScene.add(new THREE.AmbientLight(0xffffff, 1));

  const loader = new THREE.TextureLoader();
  const velocityTexture = loader.load("https://assets.papermc.io/brand/velocity_logo_blue.min.svg");
  const paperTexture = loader.load("https://assets.papermc.io/brand/papermc_logo.512.png");

  const logoGeom = new THREE.PlaneGeometry(2, 2);
  const leftLogo = new THREE.Mesh(logoGeom, new THREE.MeshBasicMaterial({ map: velocityTexture, transparent: true }));
  const rightLogo = new THREE.Mesh(logoGeom, new THREE.MeshBasicMaterial({ map: paperTexture, transparent: true }));
  leftLogo.position.x = -4;
  rightLogo.position.x = 4;
  fgScene.add(leftLogo, rightLogo);

  const particles = [];
  const particleGeom = new THREE.SphereGeometry(0.1, 12, 12);
  const particleMat = new THREE.MeshBasicMaterial({ color: 0x33ccff });

  for (let i = 0; i < 50; i++) {
    const p = new THREE.Mesh(particleGeom, particleMat.clone());
    fgScene.add(p);
    p.userData.timeOffset = Math.random() * 4;
    particles.push(p);
  }

  function animate(time) {
    requestAnimationFrame(animate);

    torus.rotation.x += 0.001;
    torus.rotation.y += 0.002;
    bgRenderer.render(bgScene, bgCamera);

    const t = time * 0.001;
    for (const p of particles) {
      const a = ((t + p.userData.timeOffset) % 4) / 4;
      p.position.x = -4 + 8 * a;
      p.position.y = Math.sin(a * Math.PI * 2) * 1.5;
    }

    fgRenderer.setSize(fgCanvas.clientWidth, fgCanvas.clientHeight, false);
    fgCamera.aspect = fgCanvas.clientWidth / fgCanvas.clientHeight;
    fgCamera.updateProjectionMatrix();
    fgRenderer.render(fgScene, fgCamera);
  }

  animate();

  window.addEventListener('resize', () => {
    bgRenderer.setSize(window.innerWidth, window.innerHeight);
    fgRenderer.setSize(fgCanvas.clientWidth, fgCanvas.clientHeight);
  });
</script>
</file>

</files>
